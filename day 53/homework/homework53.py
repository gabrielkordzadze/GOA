#2) კომენტარის სახით ჩამოწერეთ თუ რა განსხვავებაა set-ებსა და list-ებს შორის.

#List: სიაში ელემენტები განლაგებულია გარკვეული თანმიმდევრობით, რაც ნიშნავს, რომ თქვენ შეგიძლიათ მიმართოთ თითოეულ ელემენტს ინდექსით. 
# List-ებს შეუძლიათ შეიცავდეს დუპლიკატებს, ანუ ერთნაირი ელემენტები შეიძლება შეიცავდეს.
#Set: სეტში ელემენტები არ არიან განლაგებული კონკრეტული თანმიმდევრობით, ანუ არ აქვს მნიშვნელობა, თუ რა რიგში არიან ისინი.
#  Set-ებს არ შეუძლიათ დუპლიკატების შენახვა, რადგან თითოეული ელემენტი უნიკალურია.

#3) შექმენით set სადაც შეინახავთ რიცხვებს, შემდეგ კი ინდექსინგის საშუალებით სცადეთ თითოეული ელემენტის შეცვლა და დააკვირდით შედეგს.
numbers = {1, 2, 3, 4}
numbers[0] = 5  # ეს გამოიწვევს TypeError-ს
#Set-ებში ელემენტებს არ აქვთ ინდექსები, რადგან ეს მონაცემების კოლექცია არ არის ამორიგებული. ამიტომ, თქვენ არ შეგიძლიათ შეცვალოთ set-ის ელემენტი 
#ინდექსით. თუ სცადეთ შეცვლა, მიიღებთ შეცდომას.

#4) შექმენით set, რომელშიც შენახული გექნებათ Fast food საკვები პროდუქტები. შემდეგ კი ამოშალეთ ყველა პირვანდელი ელემენტები set-იდან, და მათ ნაცვლად დაამატეთ ჯანსაღი საკვები პროდუქტები.

# Fast food პროდუქტების set
fast_food = {"Burger", "Pizza", "Fries", "Soda"}

# ყველა ელემენტის ამოშლა და ახალი ჯანსაღი საკვების დამატება
healthy_food = {"Salad", "Fruit", "Grilled Chicken", "Smoothie"}

# Fast food set-ის გაწმენდა
fast_food.clear()

# ჯანსაღი საკვების დამატება
fast_food = healthy_food

print(fast_food)

#5) შექმენით ფუნქცია, რომელიც არგუმენტად იღებს სიას, და აბრუნებს იგივე სიას, მაგრამ დუპლიკატების გარეშე. hint: გააკეთეთ set-ის საშუალებით (output-ში ელემენტების თანმიმდევრობას მნიშვნელობა არ აქვს)

def remove_duplicates(input_list):
    return list(set(input_list))